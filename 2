#include<stdio.h>
#include <stdlib.h> 
struct TreeNode 
{
    int val;
    struct TreeNode *left;
    struct TreeNode *right;
    int buildBST;
}; 
struct TreeNode* sortedArrayToBST(int* nums, int numsSize ) 
{
    if (nums == NULL || numsSize <= 0) 
	{
        return NULL;
    }
   return buildBST(nums, 0, numsSize - 1);
};
struct TreeNode* buildBST(int* nums, int left, int right) 
{
    if (left > right) 
	{
        return NULL;
    }
    int mid = left + (right - left) / 2;
    struct TreeNode* root = (struct TreeNode*) malloc(sizeof(struct TreeNode));
    if (!root) 
	{
        return NULL;
    }
    root->val = nums[mid];
    root->left = buildBST(nums, left, mid - 1);
    root->right = buildBST(nums, mid + 1, right);
    return root;
}
