#include <stdio.h>
#include <stdbool.h>

// Function to check if there's a subset with sum equal to given sum
bool isSubsetSum(int arr[], int n, int sum) {
    // Create a 2D array to store results of subproblems
    bool dp[n+1][sum+1];
    
    // Initialize the dp array
    for (int i = 0; i <= n; i++) {
        for (int j = 0; j <= sum; j++) {
            if (j == 0)
                dp[i][j] = true;  // Sum of 0 can always be achieved with an empty subset
            else if (i == 0)
                dp[i][j] = false; // No sum can be achieved with 0 elements (except sum 0)
            else if (arr[i-1] > j)
                dp[i][j] = dp[i-1][j];  // Exclude the element
            else
                dp[i][j] = dp[i-1][j] || dp[i-1][j-arr[i-1]];  // Include or exclude the element
        }
    }
    
    return dp[n][sum];
}

int main() {
    int arr[] = {3, 34, 4, 12, 5, 2};
    int sum = 9;
    int n = sizeof(arr)/sizeof(arr[0]);
    
    if (isSubsetSum(arr, n, sum) == true)
        printf("Found a subset with given sum");
    else
        printf("No subset with given sum");
    
    return 0;
}
